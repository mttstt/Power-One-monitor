esphome:
  name: aurora
  platform: ESP8266
  board: d1_mini
  includes:
    - aurora.h
    - ABBAurora.cpp
    - ABBAurora.h
    - ABBAuroraEnums.h
    - ABBAuroraStrings.cpp
    - ABBAuroraStrings.h

wifi:
  ssid: !secret Wifi_SSID
  password: !secret Wifi_PWD
  # Optional manual IP
  manual_ip:
    static_ip: 10.24.1.134
    gateway: 10.24.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8
 # This will cause ESPHome to only enable the access point when no connection to the WiFi router can be made.
  # ap:
  #   ssid: AuroraRecovery

# Enable captive portal
# captive_portal:

# mqtt:
#  broker: 192.168.1.108

#web_server:
#  port: 80

# Enable logging
logger:
  level: VERBOSE
  hardware_uart: UART1 # TX: GPIO2, RX: None (Only on ESP8266)
  esp8266_store_log_strings_in_flash: False

# Enable ota
ota:

# Enable Home Assistant API
# Per utilizzare le api invece che mqtt (molto più lento) bisogna renderere raggiungibile
# esphome dalle api. Nel caso si usi l'esp8266 come router wifi martin-ger/esp_wifi_repeater,
# ecco la configurazione:
##
# telnet 192.168.1.106 7777
# set led 255
# portmap add TCP 6053 10.24.1.134 6053
# save
#
# NON FUNZIONA il discorso delle API
#
api:

#time:
#  - platform: homeassistant
#    id: homeassistant_time


# switch:
#   - platform: restart
#     name: "Riavvia sensore"
#
# binary_sensor:
#   - platform: status
#     name: " Stato sensore"

text_sensor:
  # - platform: wifi_info
  #   ip_address:
  #     name: Adress_IP
  #   ssid:
  #     name: SSID
  #   bssid:
  #     name: BSSID
  # - platform: version
  #   name: "ESPHome Version"
  - platform: custom
    lambda: |-
      auto inverter1 = new AuroraSensor ();
      App.register_component(inverter1);
      return {
             inverter1->TransmissionState_sensor,
             inverter1->GlobalState_sensor,
             inverter1->InverterState_sensor,
             inverter1->AlarmState_sensor,
             inverter1->Firmware_sensor,
             inverter1->SystemSerialNumber_sensor,
             inverter1->LastFourAlarms_sensor,
             inverter1->ManufacturingWeekYear_sensor,
             inverter1->Version_sensor
             };
    text_sensors:
    - name: "Transmission State"
    - name: "Global State"
    - name: "Inverter State"
    - name: "Alarm State"
    - name: "Firmware"
    - name: "Serial number"
    - name: "Last Four Alarms"
    - name: "Manufacturing Week Year"
    - name: "Version"


sensor:
# - platform: uptime
#   name: Uptime
#   icon: mdi:clock-outline
#   update_interval: 300s
#   unit_of_measurement: days
#   filters:
#     - multiply: 0.000011574
# - platform: wifi_signal
#   name: "Segnale wifi sensore"
#   update_interval: 60s
- platform: custom
  lambda: |-
    auto inverter = new AuroraSensor ();
    App.register_component(inverter);
    return {
             inverter->PowerIn1_sensor,
             inverter->PowerIn2_sensor,
             inverter->GridPower_sensor,
             inverter->TemperatureInverter_sensor,
             inverter->TemperatureBooster_sensor,
             inverter->DayCumulatedEnergy_sensor,
             inverter->MonthCumulatedEnergy_sensor,
             inverter->YearCumulatedEnergy_sensor,
             inverter->VIn1_sensor,
             inverter->IIn1_sensor,
             inverter->VIn2_sensor,
             inverter->IIn2_sensor,
             inverter->IsolationResistance_sensor,
             inverter->PowerPeak_sensor,
             inverter->PowerPeakToday_sensor
           };
  sensors:
  - name: "Power Input 1"
    unit_of_measurement: 'W'
    accuracy_decimals: 2
  - name: "Power Input 2"
    unit_of_measurement: 'W'
    accuracy_decimals: 2
  - name: "Grid Power"
    unit_of_measurement: 'W'
    accuracy_decimals: 2
  - name: "Temperature Inverter"
    unit_of_measurement: °C
    accuracy_decimals: 2
  - name: "Temperature Booster"
    unit_of_measurement: °C
    accuracy_decimals: 2
  - name: "Cumulated energy (day)"
    unit_of_measurement: 'W'
  - name: "Cumulated energy (month)"
    unit_of_measurement: 'W'
  - name: "Cumulated energy (year)"
    unit_of_measurement: 'W'
  - name: "Volt input 1"
    unit_of_measurement: 'V'
    accuracy_decimals: 2
  - name: "Ampere input 1"
    unit_of_measurement: 'A'
    accuracy_decimals: 2
  - name: "Volt input 2"
    unit_of_measurement: 'V'
    accuracy_decimals: 2
  - name: "Ampere input 2"
    accuracy_decimals: 2
    unit_of_measurement: 'A'
  - name: "Isolation Resistance"
    unit_of_measurement: 'Ohm'
  - name: "Power Peak"
    unit_of_measurement: 'W'
  - name: "Power Peak Today"
    unit_of_measurement: 'W'
